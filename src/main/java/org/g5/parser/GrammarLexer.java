// Generated from C:/Users/mikke/IdeaProjects/Parser/Grammar.g4 by ANTLR 4.13.1
package org.g5.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class GrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		MULTI_LINE_COMMENT=1, SINGLE_COMMENT=2, NEWLINE=3, ACTIVATION=4, FLOAT=5, 
		INT=6, DELIMITER=7, OPEN_BRACK=8, CLOSE_BRACK=9, COMMA=10, ASSIGN=11, 
		OPEN_PAREN=12, CLOSED_PAREN=13, SIGMOID=14, RELU=15, TANH=16, ARROW=17, 
		OPEN_SQUARE=18, CLOSED_SQUARE=19, BREAK=20, RETURN=21, IF=22, ELSE=23, 
		LOOP=24, AND=25, OR=26, NEQ=27, EQ=28, GEQ=29, LEQ=30, GE=31, LE=32, SUB=33, 
		ADD=34, MUL=35, DIV=36, ID=37;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"MULTI_LINE_COMMENT", "SINGLE_COMMENT", "NEWLINE", "ACTIVATION", "FLOAT", 
			"INT", "DELIMITER", "OPEN_BRACK", "CLOSE_BRACK", "COMMA", "ASSIGN", "OPEN_PAREN", 
			"CLOSED_PAREN", "SIGMOID", "RELU", "TANH", "ARROW", "OPEN_SQUARE", "CLOSED_SQUARE", 
			"BREAK", "RETURN", "IF", "ELSE", "LOOP", "AND", "OR", "NEQ", "EQ", "GEQ", 
			"LEQ", "GE", "LE", "SUB", "ADD", "MUL", "DIV", "ID"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, "';'", "'{'", "'}'", "','", 
			"'='", "'('", "')'", "'Sigmoid'", "'ReLU'", "'Tanh'", "'->'", "'['", 
			"']'", "'break'", "'return'", "'if'", "'else'", "'loop'", "'and'", "'or'", 
			"'!='", "'=='", "'>='", "'<='", "'>'", "'<'", "'-'", "'+'", "'*'", "'/'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "MULTI_LINE_COMMENT", "SINGLE_COMMENT", "NEWLINE", "ACTIVATION", 
			"FLOAT", "INT", "DELIMITER", "OPEN_BRACK", "CLOSE_BRACK", "COMMA", "ASSIGN", 
			"OPEN_PAREN", "CLOSED_PAREN", "SIGMOID", "RELU", "TANH", "ARROW", "OPEN_SQUARE", 
			"CLOSED_SQUARE", "BREAK", "RETURN", "IF", "ELSE", "LOOP", "AND", "OR", 
			"NEQ", "EQ", "GEQ", "LEQ", "GE", "LE", "SUB", "ADD", "MUL", "DIV", "ID"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public GrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Grammar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000%\u00e5\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0005\u0000P\b\u0000\n\u0000\f\u0000S\t\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0005\u0001^\b\u0001\n\u0001\f\u0001"+
		"a\t\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0003\u0003l\b\u0003"+
		"\u0001\u0004\u0005\u0004o\b\u0004\n\u0004\f\u0004r\t\u0004\u0001\u0004"+
		"\u0001\u0004\u0004\u0004v\b\u0004\u000b\u0004\f\u0004w\u0001\u0005\u0004"+
		"\u0005{\b\u0005\u000b\u0005\f\u0005|\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b"+
		"\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001"+
		"\u0018\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001"+
		"\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001"+
		"\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#"+
		"\u0001#\u0001$\u0001$\u0005$\u00e1\b$\n$\f$\u00e4\t$\u0001Q\u0000%\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/"+
		"\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%\u0001"+
		"\u0000\u0006\u0002\u0000\n\n\r\r\u0003\u0000\t\n\r\r  \u0001\u000009\u0001"+
		"\u0000..\u0003\u0000AZ__az\u0006\u0000\'\'--09AZ__az\u00ec\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000"+
		"\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000"+
		"\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000"+
		"\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000"+
		"\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000"+
		"\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000"+
		"\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001"+
		"\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000"+
		"\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000"+
		"5\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001"+
		"\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000"+
		"\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000"+
		"C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001"+
		"\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0001K\u0001\u0000\u0000"+
		"\u0000\u0003Y\u0001\u0000\u0000\u0000\u0005d\u0001\u0000\u0000\u0000\u0007"+
		"k\u0001\u0000\u0000\u0000\tp\u0001\u0000\u0000\u0000\u000bz\u0001\u0000"+
		"\u0000\u0000\r~\u0001\u0000\u0000\u0000\u000f\u0080\u0001\u0000\u0000"+
		"\u0000\u0011\u0082\u0001\u0000\u0000\u0000\u0013\u0084\u0001\u0000\u0000"+
		"\u0000\u0015\u0086\u0001\u0000\u0000\u0000\u0017\u0088\u0001\u0000\u0000"+
		"\u0000\u0019\u008a\u0001\u0000\u0000\u0000\u001b\u008c\u0001\u0000\u0000"+
		"\u0000\u001d\u0094\u0001\u0000\u0000\u0000\u001f\u0099\u0001\u0000\u0000"+
		"\u0000!\u009e\u0001\u0000\u0000\u0000#\u00a1\u0001\u0000\u0000\u0000%"+
		"\u00a3\u0001\u0000\u0000\u0000\'\u00a5\u0001\u0000\u0000\u0000)\u00ab"+
		"\u0001\u0000\u0000\u0000+\u00b2\u0001\u0000\u0000\u0000-\u00b5\u0001\u0000"+
		"\u0000\u0000/\u00ba\u0001\u0000\u0000\u00001\u00bf\u0001\u0000\u0000\u0000"+
		"3\u00c3\u0001\u0000\u0000\u00005\u00c6\u0001\u0000\u0000\u00007\u00c9"+
		"\u0001\u0000\u0000\u00009\u00cc\u0001\u0000\u0000\u0000;\u00cf\u0001\u0000"+
		"\u0000\u0000=\u00d2\u0001\u0000\u0000\u0000?\u00d4\u0001\u0000\u0000\u0000"+
		"A\u00d6\u0001\u0000\u0000\u0000C\u00d8\u0001\u0000\u0000\u0000E\u00da"+
		"\u0001\u0000\u0000\u0000G\u00dc\u0001\u0000\u0000\u0000I\u00de\u0001\u0000"+
		"\u0000\u0000KL\u0005/\u0000\u0000LM\u0005*\u0000\u0000MQ\u0001\u0000\u0000"+
		"\u0000NP\t\u0000\u0000\u0000ON\u0001\u0000\u0000\u0000PS\u0001\u0000\u0000"+
		"\u0000QR\u0001\u0000\u0000\u0000QO\u0001\u0000\u0000\u0000RT\u0001\u0000"+
		"\u0000\u0000SQ\u0001\u0000\u0000\u0000TU\u0005*\u0000\u0000UV\u0005/\u0000"+
		"\u0000VW\u0001\u0000\u0000\u0000WX\u0006\u0000\u0000\u0000X\u0002\u0001"+
		"\u0000\u0000\u0000YZ\u0005/\u0000\u0000Z[\u0005/\u0000\u0000[_\u0001\u0000"+
		"\u0000\u0000\\^\b\u0000\u0000\u0000]\\\u0001\u0000\u0000\u0000^a\u0001"+
		"\u0000\u0000\u0000_]\u0001\u0000\u0000\u0000_`\u0001\u0000\u0000\u0000"+
		"`b\u0001\u0000\u0000\u0000a_\u0001\u0000\u0000\u0000bc\u0006\u0001\u0000"+
		"\u0000c\u0004\u0001\u0000\u0000\u0000de\u0007\u0001\u0000\u0000ef\u0001"+
		"\u0000\u0000\u0000fg\u0006\u0002\u0000\u0000g\u0006\u0001\u0000\u0000"+
		"\u0000hl\u0003\u001b\r\u0000il\u0003\u001d\u000e\u0000jl\u0003\u001f\u000f"+
		"\u0000kh\u0001\u0000\u0000\u0000ki\u0001\u0000\u0000\u0000kj\u0001\u0000"+
		"\u0000\u0000l\b\u0001\u0000\u0000\u0000mo\u0007\u0002\u0000\u0000nm\u0001"+
		"\u0000\u0000\u0000or\u0001\u0000\u0000\u0000pn\u0001\u0000\u0000\u0000"+
		"pq\u0001\u0000\u0000\u0000qs\u0001\u0000\u0000\u0000rp\u0001\u0000\u0000"+
		"\u0000su\u0007\u0003\u0000\u0000tv\u0007\u0002\u0000\u0000ut\u0001\u0000"+
		"\u0000\u0000vw\u0001\u0000\u0000\u0000wu\u0001\u0000\u0000\u0000wx\u0001"+
		"\u0000\u0000\u0000x\n\u0001\u0000\u0000\u0000y{\u0007\u0002\u0000\u0000"+
		"zy\u0001\u0000\u0000\u0000{|\u0001\u0000\u0000\u0000|z\u0001\u0000\u0000"+
		"\u0000|}\u0001\u0000\u0000\u0000}\f\u0001\u0000\u0000\u0000~\u007f\u0005"+
		";\u0000\u0000\u007f\u000e\u0001\u0000\u0000\u0000\u0080\u0081\u0005{\u0000"+
		"\u0000\u0081\u0010\u0001\u0000\u0000\u0000\u0082\u0083\u0005}\u0000\u0000"+
		"\u0083\u0012\u0001\u0000\u0000\u0000\u0084\u0085\u0005,\u0000\u0000\u0085"+
		"\u0014\u0001\u0000\u0000\u0000\u0086\u0087\u0005=\u0000\u0000\u0087\u0016"+
		"\u0001\u0000\u0000\u0000\u0088\u0089\u0005(\u0000\u0000\u0089\u0018\u0001"+
		"\u0000\u0000\u0000\u008a\u008b\u0005)\u0000\u0000\u008b\u001a\u0001\u0000"+
		"\u0000\u0000\u008c\u008d\u0005S\u0000\u0000\u008d\u008e\u0005i\u0000\u0000"+
		"\u008e\u008f\u0005g\u0000\u0000\u008f\u0090\u0005m\u0000\u0000\u0090\u0091"+
		"\u0005o\u0000\u0000\u0091\u0092\u0005i\u0000\u0000\u0092\u0093\u0005d"+
		"\u0000\u0000\u0093\u001c\u0001\u0000\u0000\u0000\u0094\u0095\u0005R\u0000"+
		"\u0000\u0095\u0096\u0005e\u0000\u0000\u0096\u0097\u0005L\u0000\u0000\u0097"+
		"\u0098\u0005U\u0000\u0000\u0098\u001e\u0001\u0000\u0000\u0000\u0099\u009a"+
		"\u0005T\u0000\u0000\u009a\u009b\u0005a\u0000\u0000\u009b\u009c\u0005n"+
		"\u0000\u0000\u009c\u009d\u0005h\u0000\u0000\u009d \u0001\u0000\u0000\u0000"+
		"\u009e\u009f\u0005-\u0000\u0000\u009f\u00a0\u0005>\u0000\u0000\u00a0\""+
		"\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005[\u0000\u0000\u00a2$\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a4\u0005]\u0000\u0000\u00a4&\u0001\u0000\u0000\u0000"+
		"\u00a5\u00a6\u0005b\u0000\u0000\u00a6\u00a7\u0005r\u0000\u0000\u00a7\u00a8"+
		"\u0005e\u0000\u0000\u00a8\u00a9\u0005a\u0000\u0000\u00a9\u00aa\u0005k"+
		"\u0000\u0000\u00aa(\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005r\u0000\u0000"+
		"\u00ac\u00ad\u0005e\u0000\u0000\u00ad\u00ae\u0005t\u0000\u0000\u00ae\u00af"+
		"\u0005u\u0000\u0000\u00af\u00b0\u0005r\u0000\u0000\u00b0\u00b1\u0005n"+
		"\u0000\u0000\u00b1*\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005i\u0000\u0000"+
		"\u00b3\u00b4\u0005f\u0000\u0000\u00b4,\u0001\u0000\u0000\u0000\u00b5\u00b6"+
		"\u0005e\u0000\u0000\u00b6\u00b7\u0005l\u0000\u0000\u00b7\u00b8\u0005s"+
		"\u0000\u0000\u00b8\u00b9\u0005e\u0000\u0000\u00b9.\u0001\u0000\u0000\u0000"+
		"\u00ba\u00bb\u0005l\u0000\u0000\u00bb\u00bc\u0005o\u0000\u0000\u00bc\u00bd"+
		"\u0005o\u0000\u0000\u00bd\u00be\u0005p\u0000\u0000\u00be0\u0001\u0000"+
		"\u0000\u0000\u00bf\u00c0\u0005a\u0000\u0000\u00c0\u00c1\u0005n\u0000\u0000"+
		"\u00c1\u00c2\u0005d\u0000\u0000\u00c22\u0001\u0000\u0000\u0000\u00c3\u00c4"+
		"\u0005o\u0000\u0000\u00c4\u00c5\u0005r\u0000\u0000\u00c54\u0001\u0000"+
		"\u0000\u0000\u00c6\u00c7\u0005!\u0000\u0000\u00c7\u00c8\u0005=\u0000\u0000"+
		"\u00c86\u0001\u0000\u0000\u0000\u00c9\u00ca\u0005=\u0000\u0000\u00ca\u00cb"+
		"\u0005=\u0000\u0000\u00cb8\u0001\u0000\u0000\u0000\u00cc\u00cd\u0005>"+
		"\u0000\u0000\u00cd\u00ce\u0005=\u0000\u0000\u00ce:\u0001\u0000\u0000\u0000"+
		"\u00cf\u00d0\u0005<\u0000\u0000\u00d0\u00d1\u0005=\u0000\u0000\u00d1<"+
		"\u0001\u0000\u0000\u0000\u00d2\u00d3\u0005>\u0000\u0000\u00d3>\u0001\u0000"+
		"\u0000\u0000\u00d4\u00d5\u0005<\u0000\u0000\u00d5@\u0001\u0000\u0000\u0000"+
		"\u00d6\u00d7\u0005-\u0000\u0000\u00d7B\u0001\u0000\u0000\u0000\u00d8\u00d9"+
		"\u0005+\u0000\u0000\u00d9D\u0001\u0000\u0000\u0000\u00da\u00db\u0005*"+
		"\u0000\u0000\u00dbF\u0001\u0000\u0000\u0000\u00dc\u00dd\u0005/\u0000\u0000"+
		"\u00ddH\u0001\u0000\u0000\u0000\u00de\u00e2\u0007\u0004\u0000\u0000\u00df"+
		"\u00e1\u0007\u0005\u0000\u0000\u00e0\u00df\u0001\u0000\u0000\u0000\u00e1"+
		"\u00e4\u0001\u0000\u0000\u0000\u00e2\u00e0\u0001\u0000\u0000\u0000\u00e2"+
		"\u00e3\u0001\u0000\u0000\u0000\u00e3J\u0001\u0000\u0000\u0000\u00e4\u00e2"+
		"\u0001\u0000\u0000\u0000\b\u0000Q_kpw|\u00e2\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}