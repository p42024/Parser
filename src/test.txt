import "/training" as trainingData; // Import statement
import "/testing" as testingData; // Import statement
import MNIST as model; // Import statement

func trainModel(model, data) -> { // Function definition
    epoch = 0; 
    loop { 
        accuracy, loss = model(data, SGD); 
        if accuracy >= 0.95 { 
            break; 
        } else {
            if epoch > 3 {
                epoch *= 10;
            }
            epoch--; 
            continue; 
        }
        x = 1 mod 2;
        epoch = epoch + 1; 
    }
    return model; 
}

func testModel(model, data) -> { 
    accuracy, loss = model(data);
    if accuracy < 0.8 { 
        model = trainModel(model, data); 
        accuracy = testModel(model, data);
    }
    return accuracy; 

}

m1 = Sigmoid -> 10; 
m2 = ReLU -> 20; 
m3 = m1 -> m2; 

trainedModel = trainModel(m3, trainingData); // Assignment

accuracy = testModel(trainedModel, testingData); // Assignment

func gcd(a, b) -> {
    if b == 0 {
        return a;
    } else {
        return gcd(b, a mod b);
    }
}